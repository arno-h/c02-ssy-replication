#!/usr/bin/env node

const cluster = require("cluster");

// Anzahl der Storage-Dienste
global.server_count = 3

if (cluster.isMaster) {
    for (let i = 0; i < global.server_count; i++) {
        cluster.fork()
    }
    cluster.on("exit", function (replica) {
        console.log("Replica", replica.id, " has exitted.")
    });
    // der Master selbst startet in diesem Beispiel keinen Server
    console.log("Master process is done.");
}
else {
    const port = 3000 + cluster.worker.id;
    console.log("Replica " + cluster.worker.id + " started and will be listening on port " + port);
    const app = require('../app');
    launchServer(app, port);
}

function launchServer(app, port) {
    const http = require('http');
    app.set('port', port);
    let server = http.createServer(app);
    server.listen(port);
    server.on('error', onError);
}

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }
    let bind = 'Port ' + port;
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}
